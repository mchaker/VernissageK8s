apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: vernissage-nginx-s3-proxy
  name: nginx-s3-proxy
  namespace: vernissage
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      component: vernissage-nginx-s3-proxy
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: vernissage
        component: vernissage-nginx-s3-proxy
      namespace: vernissage
    spec:
      containers:
        - env:
            - name: ALLOW_DIRECTORY_LIST
              value: 'false'
            - name: AWS_ACCESS_KEY_ID
              value: key_id_goes_here
            - name: AWS_SECRET_ACCESS_KEY
              value: secret_key_goes_here
            - name: S3_BUCKET_NAME
              value: bucket-name-goes-here
            - name: S3_SERVER
              value: s3.your-bucket-region.backblazeb2.com
            - name: S3_REGION
              value: your-bucket-region
            - name: S3_SERVER_PORT
              value: '443'
            - name: S3_SERVER_PROTO
              value: https
            - name: S3_STYLE
              value: path
            - name: AWS_SIGS_VERSION
              value: '4'
          image: >-
            ghcr.io/nginx/nginx-s3-gateway/nginx-oss-s3-gateway:unprivileged-oss-20250616
          imagePullPolicy: Always
          name: nginx-s3-gateway
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 101
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
